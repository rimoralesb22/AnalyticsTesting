f.zona <> 399
group by cube  (f.zona)
order by f.zona")
ds <- fetch(DS)
sd(ds$faltantes)
#dotchart(t(RS))
ds
#
# 2)	Una tabla donde queremos ver para cada zona la curva por campaña de la cantidad total de
#	productos faltantes / cantidad de consultoras de la zona. Estudiar la desviación estándar del promedio
#	de faltantes por zona sobre el último año (ene-dic 2015).
#
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
rs <- dbSendQuery(con,"SELECT  f.zona,b.CAMPANA,(sum(b.cantidad) / count(b.cuenta) ) as Articulos_Consultora
FROM AVON.BACKORDER b, AVON.factura f where b.ESTADO is NULL and b.ano=2015 and b.numero=f.numero and f.zona not in (301,399)
group by   (f.zona,b.CAMPANA)
order by f.zona")
RS <- fetch(rs)
DS <- dbSendQuery(con,"SELECT  f.zona,AVG(b.cantidad) as Faltantes
FROM AVON.BACKORDER b, AVON.factura f
WHERE b.ESTADO is NULL and
b.ano=2015 and
b.numero=f.numero and
f.zona <> 399
group by (f.zona)
order by f.zona")
ds <- fetch(DS)
sd(ds$faltantes)
#dotchart(t(RS))
ds
ds$FALTANTES
duration
a <- sd(ds$FALTANTES)
a
#
# 2)	Una tabla donde queremos ver para cada zona la curva por campaña de la cantidad total de
#	productos faltantes / cantidad de consultoras de la zona. Estudiar la desviación estándar del promedio
#	de faltantes por zona sobre el último año (ene-dic 2015).
#
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
rs <- dbSendQuery(con,"SELECT  f.zona,b.CAMPANA,(sum(b.cantidad) / count(b.cuenta) ) as Articulos_Consultora
FROM AVON.BACKORDER b, AVON.factura f where b.ESTADO is NULL and b.ano=2015 and b.numero=f.numero and f.zona not in (301,399)
group by   (f.zona,b.CAMPANA)
order by f.zona")
RS <- fetch(rs)
DS <- dbSendQuery(con,"SELECT  f.zona,AVG(b.cantidad) as Faltantes
FROM AVON.BACKORDER b, AVON.factura f
WHERE b.ESTADO is NULL and
b.ano=2015 and
b.numero=f.numero and
f.zona <> 399
group by (f.zona)
order by f.zona")
ds <- fetch(DS)
desviacion <- sd(ds$faltantes)
#dotchart(t(RS))
desviacion
desviacion <- sd(ds$FALTANTES)
desviacion
plot(ds)
ds
desviacion <- sd(ds$FALTANTES)
desviacion
sd(ds$FALTANTES)
d = data.frame(
x  = c(1:5)
, y  = c(1.1, 1.5, 2.9, 3.8, 5.2)
, sd = c(0.2, 0.3, 0.2, 0.0, 0.4)
)
d
install.packages("Hmisc", dependencies=T)
library("Hmisc")
library("Hmisc")
plot(d$x, d$y, type="n")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=T, pch=1, cap=.1)
)
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=F, pch=1, cap=.015, log="x")
)
plot(d$x, d$y, type="n")
with (
data = d
, expr = errbar(x, y, y+sd, y-sd, add=F, pch=1, cap=.015, log="x")
)
d
cars <-read.csv(file="C:\\Users\\ricmorales\\Documents\\Analytics\\R\\CARSMPG.CSV",head=TRUE,sep = ",")
summary(cars)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura f
where f.ano_camp = 2015
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
#cargamos los datos al dataframe usando 3 grupos
#Clientes <- data.frame(
#  Nombre=c("Federico", "Alan", "Maria", "Isabel", "Diego", "Luis",
#           "Isaac", "Francisca", "Ricardo", "Oscar"),
#  Edad=c(19, 51, 33, 30, 23, 26, 45, 43, 38, 60),
#  MontoConsumo= c(971, 271, 614, 521, 585, 898, 310, 848, 979, 189)
)
#---------------------------------------------------------------------------------
# Creando los 3 Cluster o usando K-MEANS
#Luego asigna grupo a cada cliente en tabla Cliente
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
#---------------------------------------------------------------------------------
#Graficando los puntos de dispersi?n y luego asignando a cada punto etiquetas
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
#Salvando Datos , con el id del grupo
write.csv(Clientes,"C:/Users/jchaves/Desktop/DT BIGDATA/Avon/Clientes_Grupos.csv")
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
summary(Clientes)
sapply
sapply(Clientes,class)
head(Clientes)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura f
where f.ano_camp = 2015
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
Clientes<- transform(Clientes,Nombre = as.factor(Nombre))
#cargamos los datos al dataframe usando 3 grupos
#Clientes <- data.frame(
#  Nombre=c("Federico", "Alan", "Maria", "Isabel", "Diego", "Luis",
#           "Isaac", "Francisca", "Ricardo", "Oscar"),
#  Edad=c(19, 51, 33, 30, 23, 26, 45, 43, 38, 60),
#  MontoConsumo= c(971, 271, 614, 521, 585, 898, 310, 848, 979, 189)
)
#---------------------------------------------------------------------------------
# Creando los 3 Cluster o usando K-MEANS
#Luego asigna grupo a cada cliente en tabla Cliente
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
#---------------------------------------------------------------------------------
#Graficando los puntos de dispersi?n y luego asignando a cada punto etiquetas
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
#Salvando Datos , con el id del grupo
write.csv(Clientes,"C:/Users/jchaves/Desktop/DT BIGDATA/Avon/Clientes_Grupos.csv")
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura f
where f.ano_camp = 2015
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
sapply(Clientes,cclass
sapply(Clientes,class)
sapply(Clientes,class)
Clientes<- transform(Clientes,Nombre = as.factor(Nombre))
Clientes<- transform(Clientes,NOMBRE = as.factor(Clientes$NOMBRE))
sapply(Clientes,class)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.1064)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
head(Clientes)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura  f
where f.ano_camp = 2015 and f.zona between 303 and 310
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
Clientes<- transform(Clientes,NOMBRE = as.factor(Clientes$NOMBRE))
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
Clientes
plot(Clientes$Edad,Clientes$MontoConsumo)
sapply(clientes,model)
sapply(clientes,mode)
sapply(clientes,mode)
sapply(Clientes,mode)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura  f
where f.ano_camp = 2015 and f.zona = 310
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
ModeloKMEANS <- kmeans(Clientes[-1],4)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$GANANCIA,Clientes$ANOSCONSULTORA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$CAMPANA,Clientes$MONTOCONSUMO,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
text(Clientes$ANOSCONSULTORA,Clientes$G,
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
head(Clientes)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia.csv")
View(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia.csv")
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[2:3],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
# PASO 2: Crea vector con Algoritmos y tabla vacía para guardar Iteraciones
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],3, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado.csv")
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
# y guarda la Distancia Intracluster de cada iteracion en la tabla Iteraciones
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],5, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],5, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_5Clusters.csv")
head(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
head(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia")
Clientes <- fetch(rs)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia where cuenta = 11112")
Clientes <- fetch(rs)
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia where cuenta in (11112,12509)")
Clientes <- fetch(rs)
head(Clientes)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,round(sum(vz.precio*vz.CANTIDAD)/count(distinct vz.CUENTA),2)/ iz.salario_prom*100 as INEC
from avon.view_Zona2013_2015 vz inner join avon.InecZona iz on vz.ZONA = iz.zona
group by vz.zona, iz.salario_prom
order by zona")
Clientes <- fetch(rs)
head(Clientes)
Clientes
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
Errores <-NULL
K_Max   <-9
for (i in 1:K_Max)
{
Errores[i] <- sum(kmeans(Clientes[-1], centers=i)$withinss)
}
# Grafica el vector "Errores"
plot(1:K_Max, Errores, type="b",
xlab="Cantidad de Cluster",
ylab="Suma de error")
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],6, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
summary(Clientes)
plot(Clientes$GANACIA,Clientes$TOTALCAMPANAS,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$GANACIA,Clientes$TOTALCAMPANAS,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
plot(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
order by participacion")
Clientes <- fetch(rs)
head(Clientes)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
order by participacion desc")
Clientes <- fetch(rs)
head(Clientes)
Clientes
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
