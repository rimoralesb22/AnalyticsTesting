Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$Edad,Clientes$MontoConsumo,
labels=Clientes$Nombre,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
Clientes
plot(Clientes$Edad,Clientes$MontoConsumo)
sapply(clientes,model)
sapply(clientes,mode)
sapply(clientes,mode)
sapply(Clientes,mode)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select f.ZONA as Nombre,f.CAMPANA as Edad ,sum(f.MONTO_NETO) as MontoConsumo from Factura  f
where f.ano_camp = 2015 and f.zona = 310
group by f.zona,f.campana
order by f.zona")
Clientes <- fetch(rs)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$Edad,Clientes$MontoConsumo,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
ModeloKMEANS <- kmeans(Clientes[-1],4)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$GANANCIA,Clientes$ANOSCONSULTORA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$CAMPANA,Clientes$MONTOCONSUMO,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
text(Clientes$ANOSCONSULTORA,Clientes$G,
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$ZONA,pos=1,col=Clientes$Grupo,cex=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
head(Clientes)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia.csv")
View(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
ModeloKMEANS <- kmeans(Clientes[-1],3)
Clientes$Grupo <- ModeloKMEANS$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia.csv")
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[2:3],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
source('DBConnection.r')
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
# PASO 2: Crea vector con Algoritmos y tabla vacÃ­a para guardar Iteraciones
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],3, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado.csv")
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vf.cuenta, sum(vf.PRECIO_FOLLETO1) as ganancia,( max(vf.fecha) - avon.sku_cuentacampana(vf.cuenta))/365 AS anosConsultora
from avon.view_Facturas2013_2015_2 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],3, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
# y guarda la Distancia Intracluster de cada iteracion en la tabla Iteraciones
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],5, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],5, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_5Clusters.csv")
head(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
head(Clientes)
source('DBConnection.r')
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia")
Clientes <- fetch(rs)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia where cuenta = 11112")
Clientes <- fetch(rs)
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select * from view_testGanancia where cuenta in (11112,12509)")
Clientes <- fetch(rs)
head(Clientes)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,round(sum(vz.precio*vz.CANTIDAD)/count(distinct vz.CUENTA),2)/ iz.salario_prom*100 as INEC
from avon.view_Zona2013_2015 vz inner join avon.InecZona iz on vz.ZONA = iz.zona
group by vz.zona, iz.salario_prom
order by zona")
Clientes <- fetch(rs)
head(Clientes)
Clientes
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
Errores <-NULL
K_Max   <-9
for (i in 1:K_Max)
{
Errores[i] <- sum(kmeans(Clientes[-1], centers=i)$withinss)
}
# Grafica el vector "Errores"
plot(1:K_Max, Errores, type="b",
xlab="Cantidad de Cluster",
ylab="Suma de error")
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],6, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
summary(Clientes)
plot(Clientes$GANACIA,Clientes$TOTALCAMPANAS,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$GANACIA,Clientes$TOTALCAMPANAS,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
plot(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
order by participacion")
Clientes <- fetch(rs)
head(Clientes)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(AVON.sku_CampanaMax(vf.cuenta)-avon.sku_CampanaMin(vf.cuenta)+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
order by participacion desc")
Clientes <- fetch(rs)
head(Clientes)
Clientes
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
head(Clientes)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta")
Clientes <- fetch(rs)
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,
avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,
Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion
from avon.view_Factura2013_2015_3 vf
group by vf.cuenta
ORDER BY vf.cuenta desc")
Clientes <- fetch(rs)
head(Clientes)
Errores <-NULL
K_Max   <-9
#------------------------------------------------------------------------------------
# Ejecuta kmeans con diferentes cluster, desde 1 hasta 9
# Luego guarda el error de cada ejecucion en el vector "Errores"
for (i in 1:K_Max)
{
Errores[i] <- sum(kmeans(Clientes[-1], centers=i)$withinss)
}
#------------------------------------------------------------------------------------
# Grafica el vector "Errores"
plot(1:K_Max, Errores, type="b",
xlab="Cantidad de Cluster",
ylab="Suma de error")
#
#----------------------------------
# PASO 3: Ejecuta k-means 10 veces en cada algoritmo
# y guarda la Distancia Intracluster de cada iteracion en la tabla Iteraciones
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],6, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
#-------------------------------------------------------------------------
# PASO 4: Calcula la media de Distancia Intracluster en cada algoritmo
#  e identificar Algoritmo Ganador
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
#-------------------------------------------------------------------------
# PASO 5: Ejecuta kmeans con algoritmo ganador y asigna grupo a cada cliente
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],6, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
#--------------------------------------------------------------#
# PASO 2: Crea vector con Algoritmos y tabla vacÃ­a para guardar Iteraciones
Algoritmos         <-c("Hartigan-Wong","Lloyd","Forgy","MacQueen")
CantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados
Iteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())
#-------------------------------------------------------------------------
# PASO 3: Ejecuta k-means 10 veces en cada algoritmo
# y guarda la Distancia Intracluster de cada iteracion en la tabla Iteraciones
for (i in 1:CantidadAlgoritmos)
{
for (ii in 1:10)
{
Modelo      <- kmeans(Clientes[-1],6, algorithm = Algoritmos[i])
Iteraciones <- rbind(Iteraciones,
data.frame(Intraclase = Modelo$betweenss,
Algoritmo = Algoritmos[i]))
}
}
#-------------------------------------------------------------------------
# PASO 4: Calcula la media de Distancia Intracluster en cada algoritmo
#  e identificar Algoritmo Ganador
Resultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean)
Resultados       <-sort(Resultados,decreasing = T)
AlgoritmoGanador <-names(Resultados[1])
#-------------------------------------------------------------------------
# PASO 5: Ejecuta kmeans con algoritmo ganador y asigna grupo a cada cliente
KmeansOptimizado <- kmeans(Clientes[2:3],6, algorithm = AlgoritmoGanador)
Clientes$Grupo   <-KmeansOptimizado$cluster
#-------------------------------------------------------------------------
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$TOTALCAMPANAS,Clientes$GANANCIA,
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas
plot(Clientes$GANACIA,Clientes$TOTALCAMPANAS,col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)
text(Clientes$GANACIA,Clientes$TOTALCAMPANAS
labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)
title(main=paste("Algoritmo ganador:",AlgoritmoGanador),cex.main=.9)
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/ganancia_optimizado_6Clusters.csv")
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2)
from avon.view_Zona2013_2015 vz
group by vz.zona
order by zona")
Zonas <- fetch(rs)
Zonas(Clientes)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2)
from avon.view_Zona2013_2015 vz
group by vz.zona
order by zona")
Zonas <- fetch(rs)
head(Zonas)
# load Practice data frame into memory
#   if not alredy there
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2) from avon.view_Zona2013_2015 vz
group by vz.zona,vz.cuenta
order by zona")
Zonas <- fetch(rs)
head(Zonas)
source('utils.R')
# install the xlsx package, if needed
# and load it into memory
ensure.loaded("data.table")
zonas1 <-data.table(Zonas)
summary(zonas1)
DT[zona = 301]
zonas1[zona = 301]
zonas1
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2) as Monto from avon.view_Zona2013_2015 vz
group by vz.zona,vz.cuenta
order by zona")
Zonas <- fetch(rs)
head(Zonas)
zonas1 <-data.table(Zonas)
summary(zonas1)
zonas1[ZONA==301]
temp = zonas1[ZONA==301]
temp[,MONTO]
median(temp[,MONTO])
median(zonas1[ZONA==301][,MONTO])
u1 <- rnorm(30) # create a vector filled with random normal values
print("This loop calculates the square of the first 10 elements of vector u1")
usq<-0
for(i in 1:10)
{
usq[i]<-u1[i]*u1[i] # i-th element of u1 squared into i-th position of usq
print(usq[i])
}
print(i)
zonas1$Mediana=median(zonas1[ZONA==301][,MONTO])
zonas1
zonas1[ZONA==301]$Mediana=median(zonas1[ZONA==301][,MONTO])
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2) as Monto from avon.view_Zona2013_2015 vz
group by vz.zona,vz.cuenta
order by zona")
Zonas <- fetch(rs)
head(Zonas)
zonas1[ZONA==301]$Mediana=median(zonas1[ZONA==301][,MONTO])
zonas1
zonas1[ZONA==301]$Mediana
zonas1[301]
head(zonas1)
zonas1[ZONA==301,Mediana :=2]
zonas1
source('DBConnection.r')
#Kmeans
rs <- dbSendQuery(con,"Select vz.zona,vz.cuenta,round(sum(vz.precio*vz.CANTIDAD),2) as Monto from avon.view_Zona2013_2015 vz
group by vz.zona,vz.cuenta
order by zona")
Zonas <- fetch(rs)
head(Zonas)
zonas1 <-data.table(Zonas)
zonas1[ZONA==301,Mediana :=median(zonas1[ZONA==301][,MONTO])]
zonas1
for(i in 301:355)
{
zonas1[ZONA==i,Mediana :=median(zonas1[ZONA==i][,MONTO])]
}
zonas1
#Calcular Mediana
zonas1 <-data.table(Zonas)
zonas1[ZONA==301,Mediana :=median(zonas1[ZONA==301][,MONTO])]
for(i in 301:355)
{
zonas1[ZONA==i,Mediana :=median(zonas1[ZONA==i][,MONTO])]
}
zonas1
write.csv(Clientes,"C:/Users/ricmorales/Desktop/BD/Mediana.csv")
write.csv(zonas1,"C:/Users/ricmorales/Desktop/BD/Mediana.csv")
