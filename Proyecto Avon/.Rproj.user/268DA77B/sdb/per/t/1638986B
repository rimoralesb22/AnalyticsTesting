{
    "contents" : "#K-means sample rows\nsource('DBConnection.r')\n\nsource('utils.R')\n\n# install the xlsx package, if needed\n# and load it into memory\nensure.loaded(\"dplyr\")\nensure.loaded(\"cluster\")\n#Kmeans\n\n#rs <- dbSendQuery(con,\"select vf.cuenta,sum(vf.precio_folleto1) AS Ganacia,\n#avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1 as TotalCampanas,\n#                  Round(avon.sku_CuentaCampana(vf.cuenta)/(avon.sku_CampanaTot(AVON.sku_CampanaMax(vf.cuenta))-avon.sku_campanatot(avon.sku_CampanaMin(vf.cuenta))+1),2) as Participacion\n#                  from avon.view_Factura2013_2015_3 vf \n#                  group by vf.cuenta\")\n\n\n#Funcion para outliers\nremove_outliers <- function(x, na.rm = TRUE, ...) {\n  qnt <- quantile(x, probs=c(.001, .999), na.rm = na.rm, ...)\n  H <- 1.5 * IQR(x, na.rm = na.rm)\n  y <- x\n  y[x < (qnt[1] - H)] <- NA\n  y[x > (qnt[2] + H)] <- NA\n  y\n} \n\n#ClientesTot <- fetch(rs)\nClientesTot = read.csv(\"Valor_clientes.csv\")\n#Clientes$Grupo <- NULL\nhead(ClientesTot)\nClientesTot$CUENTA <- gsub(\",\",\"\",ClientesTot$CUENTA)\nClientesTot$GANACIA <- gsub(\",\",\"\",ClientesTot$GANACIA)\nClientesTot$TOTALCAMPANAS <- gsub(\",\",\"\",ClientesTot$TOTALCAMPANAS)\nClientesTot$PARTICIPACION <- gsub(\",\",\"\",ClientesTot$PARTICIPACION)\n\n\n#Clientes<- transform(Clientes,NOMBRE = as.factor(Clientes$NOMBRE))\nClientesTot$CUENTA <- as.numeric(ClientesTot$CUENTA)\nClientesTot$GANACIA <- as.numeric(ClientesTot$GANACIA)\nClientesTot$TOTALCAMPANAS <- as.numeric(ClientesTot$TOTALCAMPANAS)\nClientesTot$PARTICIPACION <- as.numeric(ClientesTot$PARTICIPACION)\n\n#Estandarizar y Escalar las variables y centrar\nClientes2 = scale(ClientesTot[2:4], center = TRUE, scale = TRUE)\n\n#Sacar los outliers\nClientes3 <- remove_outliers(Clientes2)\nhead(Clientes3)\n\n#Unimos a la matriz la informaciÃ³n original para mantener las variables originales, sin embargo no las tomamos en cuenta para hacer el kmeans.\n\nClientes5 <- cbind(Clientes3,CUENTA=ClientesTot$CUENTA,GANANCIAREAL=ClientesTot$GANACIA,CAMAPANASREAL=ClientesTot$TOTALCAMPANAS,PARTICIPACIONREAL=ClientesTot$PARTICIPACION)\nClientes5 <- data.frame(Clientes5)\nhead(Clientes5)\n\n\n#Sacar la muestra\nClientes4 <- sample_n(na.omit(Clientes5), 10000)\n\n\n#Calcular la cantidad de clusters\n#------------------------------------------------------------------------------------\n# Crea vector \"Errores\", sin datos\n# Crea variable \"K_Max\" con la cant. maxima de k a analizar\nErrores <-NULL\n  K_Max   <-9\n\n\n#------------------------------------------------------------------------------------\n# Ejecuta kmeans con diferentes cluster, desde 1 hasta 9\n# Luego guarda el error de cada ejecucion en el vector \"Errores\"\nfor (i in 1:K_Max)\n{\n  Errores[i] <- sum(kmeans(Clientes4[1:3], centers=i)$withinss)\n}\n\n#------------------------------------------------------------------------------------\n# Grafica el vector \"Errores\"\nplot(1:K_Max, Errores, type=\"b\", \n     xlab=\"Cantidad de Cluster\", \n     ylab=\"Suma de error\")\n#\n#---------------------------------------------------------------------------------\n# Creando los 3 Cluster o usando K-MEANS\n#Luego asigna grupo a cada cliente en tabla Cliente\n#ModeloKMEANS <- kmeans(Clientes[-1],3)\n#Clientes$Grupo <- ModeloKMEANS$cluster\n\n#---------------------------------------------------------------------------------\n#Graficando los puntos de dispersi?n y luego asignando a cada punto etiquetas\n#plot(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,\n#     col=Clientes$Grupo,cex.axis=.7,cex.lab=.7)\n\n#text(Clientes$ANOSCONSULTORA,Clientes$GANANCIA,\n#     labels=Clientes$CUENTA,pos=1,col=Clientes$Grupo,cex=.7)\n\n#Salvando Datos , con el id del grupo\n#write.csv(Clientes,\"C:/Users/ricmorales/Desktop/BD/ganancia.csv\")\n\n\n\n\n#--------------------------------------------------------------#\n# PASO 2: Crea vector con Algoritmos y tabla vacía para guardar Iteraciones\nAlgoritmos         <-c(\"Hartigan-Wong\",\"Lloyd\",\"Forgy\",\"MacQueen\") \nCantidadAlgoritmos <-length(Algoritmos) # guarda la cantidad de algoritmos usados\nIteraciones        <-data.frame(Intraclase=numeric(),Algoritmo=character())\n\n#-------------------------------------------------------------------------\n\n# PASO 3: Ejecuta k-means 10 veces en cada algoritmo\n# y guarda la Distancia Intracluster de cada iteracion en la tabla Iteraciones\nfor (i in 1:CantidadAlgoritmos) \n{\n  for (ii in 1:100) \n  {\n    Modelo      <- kmeans(Clientes4[1:3],5, algorithm = Algoritmos[i])\n    Iteraciones <- rbind(Iteraciones,\n                         data.frame(Intraclase = Modelo$betweenss,\n                                    Algoritmo = Algoritmos[i]))\n  }\n}\n\n#-------------------------------------------------------------------------\n# PASO 4: Calcula la media de Distancia Intracluster en cada algoritmo\n#  e identificar Algoritmo Ganador \nResultados       <- tapply(Iteraciones$Intraclase,Iteraciones$Algoritmo,mean) \nResultados       <-sort(Resultados,decreasing = T)\nAlgoritmoGanador <-names(Resultados[1])\n\n#-------------------------------------------------------------------------\n# PASO 5: Ejecuta kmeans con algoritmo ganador y asigna grupo a cada cliente\nKmeansOptimizado <- kmeans(Clientes4[1:3],5, algorithm = AlgoritmoGanador)\nClientes4$Grupo   <-KmeansOptimizado$cluster\n\n#-------------------------------------------------------------------------\n\n#PASO 6: Grafica segmentacion de algoritomo ganador y luego asigna etiquetas\nplot(Clientes4$TOTALCAMPANAS,Clientes4$GANACIA,col=Clientes4$Grupo,cex.axis=.7,cex.lab=.7)\ntext(Clientes4$TOTALCAMPANAS,Clientes4$GANACIA,\n     labels=Clientes4$CUENTA,pos=1,col=Clientes4$Grupo,cex=.7)\ntitle(main=paste(\"Algoritmo ganador:\",AlgoritmoGanador),cex.main=.9)\n\nwrite.csv(Clientes4,\"C:/Users/isalopez/Desktop/ganancia_5Clusters_centrado.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n#-------------------------------------------------------------------------\n#PAM \nPAM = pam(Clientes,k=4,metric=\"euclidean\")\nplot(PAM)\nwrite.csv(PAM,\"C:/Users/isalopez/Desktop/ganancia_optimizado_6Clusters_sample.csv\")\n\n#-------------------------------------------------------------------------\n#ACP\ninstall.packages(\"FactoMineR\")\nlibrary(FactoMineR)\npruebapca.pca=PCA(Clientes,graph=T)\n\ninstall.packages(\"ade4\")\nlibrary(ade4)\n\ncoordenadas=pruebapca.pca$ind$coord\n#PLANO PRINCIPAL\ns.label(coordenadas,xax = 1,yax = 2,label=Clientes[,1],possub=\"bottomleft\")\n\nlibrary(amap)\n\n#Prueba\nClientes2=scale(Clientes[2:4],center = T,scale = T)\nprueba.pca=princomp(Clientes2)\ncomp=predict(prueba.pca)[,1:2]\ngrupos=kmeans(comp,4)\nplot(comp,col=grupos$cluster)",
    "created" : 1461689185404.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1655202913",
    "id" : "1638986B",
    "lastKnownWriteTime" : 1461273538,
    "path" : "~/Analytics/GitHub/AnalyticsTesting/Proyecto Avon/K-means sample rows.r",
    "project_path" : "K-means sample rows.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}